version: '3.3'

services:
  postgres: 
    container_name: "auth_postgres"
    image: postgres:14.2 
    env_file:
      - ./.env.db_auth
  postgres_movies:
    container_name: "api_postgres"
    image: postgres:14.2
    env_file:
      - ./.env.db_movies
    volumes:
      - ./postgres_movies/movies_database.sql:/docker-entrypoint-initdb.d/movies_database.sql
  redis:
    container_name: "auth_redis"
    image: redis:7.0.2
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
  nginx:
    container_name: "nginx"
    build: ./nginx
    ports:
      - 1337:80
    depends_on:
      - auth
      - fastapi
  auth:
    container_name: "auth_auth"
    build: ./auth
    ports:
      - 5005:5000
    env_file:
      - ./.env.example
    depends_on:
      - redis
      - postgres
#  jaeger:
#    container_name: "auth_jaeger"
#    image: jaegertracing/all-in-one:latest
#    ports:
#      - 6831:6831/udp
#      - 16686:16686
  etl:
    container_name: "api_etl"
    build: ./etl
    env_file:
      - ./.env.example
    depends_on:
      - elasticsearch
      - postgres_movies
  fastapi:
    container_name: "api_fastapi"
    build: ./fastapi
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      ELASTIC_HOST: ${ELASTIC_HOST}
      ELASTIC_PORT: ${ELASTIC_PORT}
    depends_on:
      - elasticsearch
      - redis
  elasticsearch:
    container_name: "api_elastic"
    image: elasticsearch:7.7.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
